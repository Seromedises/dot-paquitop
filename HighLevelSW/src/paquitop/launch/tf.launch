<?xml version="1.0"?>

<!--INFO tf static_transform_publisher
		static_transform_publisher x y z yaw(z) pitch(x) roll(y) frame_id child_frame_id period_in_ms 
		
		INFO tf2_ros static_tranform_publisher
		static_transform_publisher x y z yaw(z) pitch(x) roll(y) frame_id child_frame_id -->

<launch>
 <!-- <arg name="node_start_delay" default="0.0" />-->
 
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom"/>-->
  
  <node machine="server" pkg="tf2_ros" type="static_transform_publisher" name="odom_to_broadcaster" args="0 0 0 0 0 0 odom base_footprint"/>
  <node machine="server" pkg="tf2_ros" type="static_transform_publisher" name="broadcaster_to_base_link" args="0 0 0.05 0 0 0 base_footprint base_link"/>
  <node machine="server" pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.25 0 0.2529 3.14 0 0 base_link laser"/>
  <!--<node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_camera_pose_frame" args="0.00029 -0.301 0.216 -1.57 0 0 base_link camera_pose_frame"/>-->
<!-- launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/> -->
  <node machine="server" pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_camera_pose_frame" args="0.0 0.0 0.0 -1.57 0 0 base_footprint camera_pose_frame"/>
<!-- launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/> -->


  <!-- Camera odom Node -->
 <node machine="server" pkg="tf2_ros" type="static_transform_publisher" name="odom_to_camera_odom" args="0.0 0.0 0.0 -1.57 0 0 odom camera_odom_frame"/>
	
  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the SLAM algorithm -->

</launch>
